// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CRIS.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// VoiceTestDefinition
    /// </summary>
    public partial class VoiceTestDefinition
    {
        /// <summary>
        /// Initializes a new instance of the VoiceTestDefinition class.
        /// </summary>
        public VoiceTestDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VoiceTestDefinition class.
        /// </summary>
        /// <param name="text">Information about the text used in the voice
        /// test</param>
        /// <param name="model">Information about the models used in the voice
        /// test</param>
        /// <param name="voiceTestKind">The kind of this test (e.g. Text,
        /// SSML). Possible values include: 'Text', 'SSML'</param>
        public VoiceTestDefinition(string text, ModelIdentity model, string voiceTestKind)
        {
            Text = text;
            Model = model;
            VoiceTestKind = voiceTestKind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information about the text used in the voice test
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets information about the models used in the voice test
        /// </summary>
        [JsonProperty(PropertyName = "model")]
        public ModelIdentity Model { get; set; }

        /// <summary>
        /// Gets or sets the kind of this test (e.g. Text, SSML). Possible
        /// values include: 'Text', 'SSML'
        /// </summary>
        [JsonProperty(PropertyName = "voiceTestKind")]
        public string VoiceTestKind { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Text == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Text");
            }
            if (Model == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Model");
            }
            if (VoiceTestKind == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VoiceTestKind");
            }
            if (Model != null)
            {
                Model.Validate();
            }
        }
    }
}
