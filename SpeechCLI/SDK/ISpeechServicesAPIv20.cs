// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CRIS
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Speech Services API v2.0.
    /// </summary>
    public partial interface ISpeechServicesAPIv20 : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Gets the list of accuracy tests for the authenticated subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetAccuracyTestsHeaders>> GetAccuracyTestsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new accuracy test.
        /// </summary>
        /// <param name='testDefinition'>
        /// The details of the new accuracy test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateAccuracyTestHeaders>> CreateAccuracyTestWithHttpMessagesAsync(TestDefinition testDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the accuracy test identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the accuracy test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetAccuracyTestHeaders>> GetAccuracyTestWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the accuracy test identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the accuracy test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteAccuracyTestHeaders>> DeleteAccuracyTestWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the mutable details of the test identified by its id.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the accuracy test.
        /// </param>
        /// <param name='testUpdate'>
        /// The object containing the updated fields of the test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateAccuracyTestHeaders>> UpdateAccuracyTestWithHttpMessagesAsync(System.Guid id, TestUpdate testUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of datasets for the authenticated subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetDatasetsHeaders>> GetDatasetsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the dataset identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the dataset.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetDatasetHeaders>> GetDatasetWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the specified dataset.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the dataset.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteDatasetHeaders>> DeleteDatasetWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the mutable details of the dataset identified by its ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the dataset.
        /// </param>
        /// <param name='datasetUpdate'>
        /// The updated values for the dataset.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateDatasetHeaders>> UpdateDatasetWithHttpMessagesAsync(System.Guid id, DatasetUpdate datasetUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for data imports.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForDatasetsHeaders>> GetSupportedLocalesForDatasetsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Uploads data and creates a new dataset.
        /// </summary>
        /// <param name='name'>
        /// The name of this data import (always add this string for any
        /// import).
        /// </param>
        /// <param name='description'>
        /// Optional description of this data import.
        /// </param>
        /// <param name='locale'>
        /// The locale of this data import (always add this string for any
        /// import).
        /// </param>
        /// <param name='dataImportKind'>
        /// The kind of the data import (always add this string for any
        /// import). Possible values include: 'Language', 'Acoustic',
        /// 'Pronunciation', 'CustomVoice', 'LanguageGeneration'
        /// </param>
        /// <param name='properties'>
        /// Optional properties of this data import (json serialized object
        /// with key/values, where all values must be strings)
        /// </param>
        /// <param name='audiodata'>
        /// A zip file containing the audio data (this and the audio archive
        /// file for acoustic data imports).
        /// </param>
        /// <param name='transcriptions'>
        /// A text file containing the transcriptions for the audio data (this
        /// and the transcriptions file for acoustic data imports).
        /// </param>
        /// <param name='languagedata'>
        /// A text file containing the language or pronunciation data (only
        /// this file for language data imports).
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UploadDatasetHeaders>> UploadDatasetWithHttpMessagesAsync(string name = default(string), string description = default(string), string locale = default(string), string dataImportKind = default(string), string properties = default(string), Stream audiodata = default(Stream), Stream transcriptions = default(Stream), Stream languagedata = default(Stream), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the list of endpoints for the authenticated subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetEndpointsHeaders>> GetEndpointsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new endpoint.
        /// </summary>
        /// <param name='endpoint'>
        /// The details of the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateEndpointHeaders>> CreateEndpointWithHttpMessagesAsync(EndpointDefinition endpoint, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the endpoint identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetEndpointHeaders>> GetEndpointWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the endpoint identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteEndpointHeaders>> DeleteEndpointWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the metadata of the endpoint identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='endpointUpdate'>
        /// The updated values for the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateEndpointHeaders>> UpdateEndpointWithHttpMessagesAsync(System.Guid id, EndpointUpdate endpointUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for endpoint creations.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForEndpointsHeaders>> GetSupportedLocalesForEndpointsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the list of endpoint data export tasks for the authenticated
        /// user.
        /// </summary>
        /// <param name='endpointId'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetEndpointDataExportsHeaders>> GetEndpointDataExportsWithHttpMessagesAsync(System.Guid endpointId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new endpoint data export task.
        /// </summary>
        /// <param name='endpointId'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='endpointDataDefinition'>
        /// The details of the new endpoint data export.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateEndpointDataExportHeaders>> CreateEndpointDataExportWithHttpMessagesAsync(System.Guid endpointId, EndpointDataDefinition endpointDataDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the transcriptions and captured audio files associated with
        /// the endpoint identified by the given ID.
        /// Note: Deletion will happen in the background and can take up to a
        /// day.
        /// </summary>
        /// <param name='endpointId'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteEndpointDataHeaders>> DeleteEndpointDataWithHttpMessagesAsync(System.Guid endpointId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the specified endpoint data export task for the authenticated
        /// user.
        /// </summary>
        /// <param name='endpointId'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='id'>
        /// The identifier of the data export.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetEndpointDataExportHeaders>> GetEndpointDataExportWithHttpMessagesAsync(System.Guid endpointId, System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the endpoint data export task identified by the given ID.
        /// </summary>
        /// <param name='endpointId'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='id'>
        /// The identifier of the endpoint data export.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteEndpointDataExportHeaders>> DeleteEndpointDataExportWithHttpMessagesAsync(System.Guid endpointId, System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the list of models for the authenticated subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetModelsHeaders>> GetModelsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new model.
        /// </summary>
        /// <param name='modelDefinition'>
        /// The details of the new model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateModelHeaders>> CreateModelWithHttpMessagesAsync(ModelDefinition modelDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the model identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetModelHeaders>> GetModelWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the model identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteModelHeaders>> DeleteModelWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the metadata of the model identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the model.
        /// </param>
        /// <param name='modelUpdate'>
        /// The updated values for the model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateModelHeaders>> UpdateModelWithHttpMessagesAsync(System.Guid id, ModelUpdate modelUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for model adaptation.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForModelsHeaders>> GetSupportedLocalesForModelsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Initiates a task that moves all entities associated with the
        /// authenticated subscription to another one.
        /// </summary>
        /// <param name='moveToSubscriptionDefinition'>
        /// The details of the subscription the entities are moved to.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,PostMoveToSubscriptionHeaders>> PostMoveToSubscriptionWithHttpMessagesAsync(MoveToSubscriptionDefinition moveToSubscriptionDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of transcriptions for the authenticated subscription.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetTranscriptionsHeaders>> GetTranscriptionsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new transcription.
        /// </summary>
        /// <param name='transcription'>
        /// The details of the new transcription.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,CreateTranscriptionHeaders>> CreateTranscriptionWithHttpMessagesAsync(TranscriptionDefinition transcription, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the transcription identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the transcription.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetTranscriptionHeaders>> GetTranscriptionWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the specified transcription task.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the transcription.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteTranscriptionHeaders>> DeleteTranscriptionWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the mutable details of the transcription identified by its
        /// ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the transcription.
        /// </param>
        /// <param name='transcriptionUpdate'>
        /// The updated values for the transcription.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateTranscriptionHeaders>> UpdateTranscriptionWithHttpMessagesAsync(System.Guid id, TranscriptionUpdate transcriptionUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for offline transcriptions.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForTranscriptionsHeaders>> GetSupportedLocalesForTranscriptionsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// The action returns the health of the different components of the
        /// serivce.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<HealthStatusResponse,GetHealthStatusHeaders>> GetHealthStatusWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all voice datasets of a user.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceDatasetsHeaders>> GetVoiceDatasetsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for custom voice data imports.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForVoiceDatasetsHeaders>> GetSupportedLocalesForVoiceDatasetsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Uploads data and creates a new voice data object.
        /// </summary>
        /// <param name='name'>
        /// The name of this data import (always add this string for any
        /// import).
        /// </param>
        /// <param name='description'>
        /// Optional description of this data import.
        /// </param>
        /// <param name='locale'>
        /// The locale of this data import (always add this string for any
        /// import).
        /// </param>
        /// <param name='dataImportKind'>
        /// The kind of the data import (always add this string for any
        /// import). Possible values include: 'Language', 'Acoustic',
        /// 'Pronunciation', 'CustomVoice', 'LanguageGeneration'
        /// </param>
        /// <param name='properties'>
        /// Optional properties of this data import (json serialized object
        /// with key/values, where all values must be strings)
        /// </param>
        /// <param name='audiodata'>
        /// A zip file containing the audio data.
        /// </param>
        /// <param name='transcriptions'>
        /// The transcriptions text file of the audio data.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,UploadVoiceDatasetHeaders>> UploadVoiceDatasetWithHttpMessagesAsync(string name = default(string), string description = default(string), string locale = default(string), string dataImportKind = default(string), string properties = default(string), Stream audiodata = default(Stream), Stream transcriptions = default(Stream), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the voice dataset with the given id.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice dataset
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteVoiceDatasetHeaders>> DeleteVoiceDatasetWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the mutable details of the voice dataset identified by its
        /// ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice dataset.
        /// </param>
        /// <param name='datasetUpdate'>
        /// The updated values for the voice dataset.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateVoiceDatasetHeaders>> UpdateVoiceDatasetWithHttpMessagesAsync(System.Guid id, DatasetUpdate datasetUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of voice endpoint details.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceDeploymentsHeaders>> GetVoiceDeploymentsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new voice endpoint object.
        /// </summary>
        /// <param name='endPoint'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,CreateVoiceDeploymentHeaders>> CreateVoiceDeploymentWithHttpMessagesAsync(EndpointDefinition endPoint, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the details of a Custom Voice endpoint.
        /// </summary>
        /// <param name='id'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceDeploymentHeaders>> GetVoiceDeploymentWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete the specified voice endpoint.
        /// </summary>
        /// <param name='id'>
        /// The id of voice endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteDeploymentHeaders>> DeleteDeploymentWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the name and description of the endpoint identified by the
        /// given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the endpoint.
        /// </param>
        /// <param name='endpointUpdate'>
        /// The updated values for the endpoint.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateVoiceEndpointHeaders>> UpdateVoiceEndpointWithHttpMessagesAsync(System.Guid id, EndpointUpdate endpointUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for custom voice Endpoints.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForVoiceEndpointsHeaders>> GetSupportedLocalesForVoiceEndpointsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of voice model details.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceModelsHeaders>> GetVoiceModelsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new voice model object.
        /// </summary>
        /// <param name='modelDefinition'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,CreateVoiceModelHeaders>> CreateVoiceModelWithHttpMessagesAsync(ModelDefinition modelDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets specified voice model details.
        /// </summary>
        /// <param name='id'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceModelHeaders>> GetVoiceModelWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the voice model with the given id.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice model
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteVoiceModelHeaders>> DeleteVoiceModelWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the metadata of the voice model identified by the given ID.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice model.
        /// </param>
        /// <param name='modelUpdate'>
        /// The updated values for the voice model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,UpdateVoiceModelHeaders>> UpdateVoiceModelWithHttpMessagesAsync(System.Guid id, ModelUpdate modelUpdate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a list of supported locales for custom voice Models.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetSupportedLocalesForVoiceModelsHeaders>> GetSupportedLocalesForVoiceModelsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets detail of the specified voice test.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetVoiceTestHeaders>> GetVoiceTestWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the specified voice test.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the voice test.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,DeleteVoiceTestHeaders>> DeleteVoiceTestWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new voice test.
        /// </summary>
        /// <param name='voiceTestDefinition'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ErrorContent,CreateVoiceTestHeaders>> CreateVoiceTestWithHttpMessagesAsync(VoiceTestDefinition voiceTestDefinition, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
